// ПЕРВОЕ ПРИЛОЖЕНИЕ!!!

'use strict';

// MODULE - два способа применения приема модуль:
// const app = '123';

// использование анонимной самовызывающейся функции как function expression => (function() {}())
const number = 1; // глобальная область видимости
(function() { // создаем локальную область видимости в (function() {} ())
	let number = 2;
	console.log(number); // получил: 2 => приходит из локальной переменной let number = 2;
	console.log(number + 3);  // получил: 5 => приходит из локальной переменной let number = 2 с трансформацией + 3;
}());
console.log(number);  // получил: 1 => пытаемся снаружи вывести number и обращаемся к глобальной области видимости const number = 1;
// в консоль вышло:
// 2
// 5
// 1

const user = (function() { // создаем объектный интерфейс, модуль записываем в переменную и пытаемся в неё возвратить методы, доступные снаружи 
	const private = function() { // функция в локальной области видимости и к ней доступа нет =>
		console.log('I am a private!'); 
	};
	return { // применим объектный интерфейс, т.е. return - вернем (экспортируем) этой локальной анонимной функции объект через метод sayHallo, в который мы передаем ссылку на приватную функцию private
		sayHallo: private
	}; 
}());
user.sayHallo();  // получил: I am a private! Т.е. анонимная самовызывающаяся функция private создает объект, при этом она экспортирует только те методы и свойства, которые нам нужны снаружи
// этот объект записываем в переменную user и через точку "." можно обращаться к этим свойствам и методам