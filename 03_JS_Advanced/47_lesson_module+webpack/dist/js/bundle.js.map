{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA,sBAAsB;AACtB,2BAA2B;AAC3B;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,2BAA2B;AAC3B;;;;;;UCVA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,gCAAQ,GAAG;AACpC,yCAAyC;AACzC;AACA,2B","sources":["webpack://webpack-demo/./src/js/main.js","webpack://webpack-demo/webpack/bootstrap","webpack://webpack-demo/./src/js/script.js"],"sourcesContent":["/* eslint-disable linebreak-style */\r\nfunction myModule() { // создаем модуль, который будет отграничен в маленьком файлике с помощью функций конструктор\r\n\tthis.hello = function() { // через контекст вызова this создаем функцию hello\r\n\t\tconsole.log('Hello!');\r\n\t};\r\n\tthis.goodbye = function() { // через контекст вызова this создаем функцию goodbye\r\n\t\tconsole.log('Bye!');\r\n\t};\r\n}\r\nmodule.exports = myModule; // необходимо, чтобы функция myModule() перешла из main.js в index.js, где мы можем ее переиспользовать много раз с новыми методами =>\r\n// для этого мы обращаемся к обекту module, у которого есть свойство exports, и в это свойство exports помещаем то, что намерены экспортировать - myModule!!!","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* eslint-disable linebreak-style */\r\nconst myModule = require('./main'); // для импортирования функции myModule из main.js, создаем переменную myModule с синтаксисом функции require(путь к файлу)\r\nconst myModuleInstance = new myModule(); // создаем экземпляр модуля для применения к нему различных методов =>\r\nmyModuleInstance.hello();\r\nmyModuleInstance.goodbye();"],"names":[],"sourceRoot":""}