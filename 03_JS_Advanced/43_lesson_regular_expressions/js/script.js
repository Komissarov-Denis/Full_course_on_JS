// ПЕРВОЕ ПРИЛОЖЕНИЕ!!!

'use strict';

// REGULAR EXPRESSIONS (РЕГУЛЯРНЫЕ ВЫРАЖЕНИЯ) - это шаблон, сопоставляемый с искомой строкой слева направо.
// Состоит из двух частей: патернов и флагов
// Патерны - это шаблон
// Флаги - это функциональные отметки или знаки: (i - поиск вне регистра), (g - глобальный флаг), (m - многострочный режим)

// new RegExp('pattern', 'flags'); // полная запись конструктора в классическом синтаксисе, которым никто никогда не пользуется!!!

// /pattern/f // более короткий синтаксис

// const answer = prompt('Введите Ваше имя!');
// const regexp = /n/ig; // ищем все маленькие буквы 'n'

// console.log(answer.search(regexp)); // метод возвращает найденные индексы
// ( const regexp = /n/; ) => в слове 'Ann' найдет первую букву 'n' и выдаст индекс 1 - как первую позицию результата в слове, если мы введём слово без 'n', то получим индекс -1
// ( const regexp = /n/i; ) => в слове 'ANn' найдет вне регистра первую букву 'n' и выдаст индекс 1 - как первую позицию результата в слове
// ( const regexp = /n/g; ) => search() будет искать первое совпадение, поэтому он флаг 'g' бессмысленен в поиске

// console.log(answer.match(regexp)); // метод возвращает совпадения
// ( const regexp = /n/; ) => в слове 'Ann' найдет первую букву 'n' и выдаст индекс 1 - как первую позицию результата в слове, если мы введём слово без 'n', то получим (null)
// ( const regexp = /n/i; ) => в слове 'Ann' выдаст массив ['n', index: 1, input: 'Ann', groups: undefined] - с кусочком строки, где найдена 'n', порядковый индекс 1 и сама строка 'Ann'
// ( const regexp = /n/ig; ) => в слове 'ANNN' выдаст массив (3)['N', 'N', 'N']

// const pass = prompt('Password');
// console.log(pass.replace(/\./g, '*')); // это выражение означает (/./g), что регулярка возвратит все элементы, которые попадут в строку (так же как звездочка в css) => (pass.replace(/./g, '*')) все символы пароля заменяем на звездочку
// (pass.replace(/./g, '*')) => при вводе dfgbndfbn получаем *********
// (pass.replace(/\./g, '*')); => (/\./g) это экранирование конкретного знака - точки '.', чтобы отдельно ее выбрать, при вводе ljklk... получил ljklk*** замену только для точек

// console.log('12-34-56'.replace(/-/g, ':')); // получил замену дефисов на двоеточие 12:34:56, очень удобно в часах

const answer2 = prompt('Введите Ваше имя!');
const regexp2 = /n/ig; // ищем все маленькие буквы 'n'
console.log(regexp2.test(answer2)); // метод test() возвращает либо булиновые совпадения true, либо false (ввод Ann дает true, App - false)