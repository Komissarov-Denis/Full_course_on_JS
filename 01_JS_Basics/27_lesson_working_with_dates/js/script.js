// ПЕРВОЕ ПРИЛОЖЕНИЕ!!!

'use strict';

const now = new Date(); // конструктор даты, получаем: 2023-11-07T14:35:10.031Z - Т является разделителем!!! 10.031Z - миллисекунды
console.log(now);

const now2 = new Date('2023-11-07'); // конструктор даты, получаем: 2023-11-07T00:00:00.000Z - передаем в виде строки!!!
console.log(now2);

const now3 = new Date(2023, 11, 7, 20); // конструктор даты, получаем: 2023-12-07T17:00:00.000Z 
console.log(now3); // !!! месяцы в дате как в массиве считаются с 0 = январь, потому число 11 равно декабрь - 12 месяцу!!! При этом 20 часов в переводе на часовой пояс GMT+3 будет 17:00 час по GMT+0

const now4 = new Date(0); // конструктор даты, получаем: 1970-01-01T00:00:00.000Z - нуль миллисекунд возвращает нам данную начальную дату 01.01.1970 г., от нее идет отсчет!!!
console.log(now4);

const now5 = new Date(-9999999999999); // конструктор даты, получаем: 1653-02-10T06:13:20.001Z - время указывается в миллисекундах!!!
console.log(now5);

// МЕТОДЫ получения ДАТЫ
const now6 = new Date(); 
console.log(now6.getFullYear()); // конструктор даты, получаем: 2023
console.log(now6.getMonth()); // конструктор даты, получаем: 10
console.log(now6.getDate()); // конструктор даты, получаем: 7
console.log(now6.getHours()); // конструктор даты, получаем: 18 - местное время GMT+3
console.log(now6.getUTCHours()); // конструктор даты, получаем: 15 - время по гринвичу GMT+0
console.log(now6.getMinutes()); // конструктор даты, получаем: 20
console.log(now6.getSeconds()); // конструктор даты, получаем: 52
console.log(now6.getMilliseconds()); // конструктор даты, получаем: 38
console.log(now6.getDay()); // конструктор даты, получаем: 2 (отсчет идет от Вс - нулевой день, значит Вт - второй день)
console.log(now6.getTimezoneOffset()); // конструктор даты, возвращает разницу между местным временем GMT+3 и по гринвичу GMT+0 в минутах -180
console.log(now6.getTime()); // конструктор даты, возвращает 1699371007499 миллисекунд, которое прошло с 01.01.1970 г.

const now8 = new Date(1699371007499); // конструктор число в миллисекундах 1699371007499 перевел в дату
console.log(now8); // получил: 2023-11-07T15:30:07.499Z

// МЕТОДЫ установки ДАТЫ
const now7 = new Date();
console.log(now7.setHours(18)); // устанавливаем 18 часов, получаем: 1699371222519  2023-11-07T15:33:42.519Z, так как консоль не ориентируется на локальные данные VSCode,
console.log(now7); // но в консоли браузера получил Tue Nov 07 2023 18:35:12 GMT+0300 (Москва, стандартное время), так как это глобальные установки ПК!!!
console.log(now7.setHours(18, 40)); // можно писать с добавлением минут

// МЕТОД написания даты, два способа:
// 1) const now = new Date('2023-11-07'); - через переменную
// 2) new Date.parse('2023-11-07'); - через метод Date.parse()

let start = new Date();
for (let i = 0; i < 100000; i++) {
	let some = i ** 3; // ** - это оператор ES7 возводящий в степень!!!!
}
let end = new Date();
alert(`Цикл отработал за ${end - start} миллисекунд`); // в интерполяцию можно вставлять простые выражения!!!
// Цикл называется BENCHMARK - смотрим на производительность циклов, отнимаем от конечного значения начальное...