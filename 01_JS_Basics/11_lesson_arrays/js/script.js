// ПЕРВОЕ ПРИЛОЖЕНИЕ!!!

// 'use strict';

const arr = [1, 2, 3, 6, 8];
// метод - это функция с коллбэк функцией внутри, метод forEach проходится по каждому элементу
// массива и применяет коллбэк функцию на каждом из этих элементов!!!
// item - элемент, i - номер по порядку, arr - необходимый массив
arr.forEach(function(item, i, arr) {
	console.log(`${i}: ${item} внутри массива ${arr}`); //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
});

// ПСЕВДОМАССИВ - обычный массив без методов!!!!

const arr1 = [1, 2, 3, 6, 8];
arr1[99] = 0; // некорректное поведение, не должны быть пустые ячейки!!!!!!!!!!!!!!
console.log(arr1.length); // количество элементов массивов, т.е. (индекс +1), так как начинается с нулевого индекса
console.log(arr1);

const arr2 = [1, 2, 3, 6, 8];
arr2.pop(); // метод, удаляющий последний эдемент из нашего массива
arr2.push(10); // метод, добавляющий последний элемент в массив
console.log(arr2);

const arr3 = [1, 2, 3, 6, 8];
for (let i = 0; i < arr3.length; i++) { // цикл перебора массива
	console.log(arr3[i]);
}

// конструкция подобного перебора массива!!!!
for (const value of arr3) {
	console.log(value);
}

const str = prompt('', '');
const products = str.split(', '); // превращает строку в массив с разделителем ","!!!!
console.log(products);
products.sort(); // метод сортировки массива как СТРОКИ!!!
console.log(products.join('; ')); // объединяет элементы массива в строку с разделителем ","!!!!

const arr4 = [14, 2, 13, 8, 6];
arr4.sort(); // метод сортировки массива как СТРОКИ!!! поэтому [ 13, 14, 2, 6, 8 ]
console.log(arr4);

const arr5 = [14, 2, 13, 8, 6];
arr5.sort(compareNum); // [ 2, 6, 8, 13, 14 ] за счет коллбэк функции и алгоритма Быстрой Сортировки
console.log(arr5);
function compareNum(a, b) {
	return a - b;
}